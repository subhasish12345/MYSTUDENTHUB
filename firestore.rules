rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { 
      return request.auth != null; 
    }
    function isAdmin() {
      return isSignedIn() && (
        request.auth.token.email == 'sadmisn@gmail.com' ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
    }

    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow read:   if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow update, delete: if isAdmin();
    }

    match /teachers/{teacherId} {
      allow read: if isSignedIn();
      allow list: if isAdmin(); // Rule to allow admin to list all teachers
      allow create, delete: if isAdmin();
      allow update: if isAdmin() || request.auth.uid == teacherId;
    }

    match /students/{studentId} {
      allow read: if isSignedIn() && (request.auth.uid == studentId || isAdmin());
      allow list: if isAdmin(); // Rule to allow admin to list all students
      allow create, delete: if isAdmin();
      allow update: if isAdmin() || (request.auth.uid == studentId);
    }

    match /students/{studentId}/semesters/{semesterId} {
      allow read: if isSignedIn() && (request.auth.uid == studentId || isAdmin());
      allow write: if isAdmin();
    }

    match /degrees/{degreeId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /streams/{streamId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /batches/{batchId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
  }
}
